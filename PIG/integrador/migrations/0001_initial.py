# Generated by Django 3.2.18 on 2023-06-16 18:54

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('apellido', models.CharField(max_length=100, verbose_name='Apellido')),
                ('tipo_dni', models.IntegerField(choices=[(1, 'DNI'), (2, 'CUIT'), (3, 'CUIL')], verbose_name='Tipo de documento')),
                ('dni', models.IntegerField(verbose_name='Documento')),
                ('email', models.EmailField(max_length=150)),
                ('baja', models.BooleanField(default=False)),
                ('fecha_alta', models.DateField(verbose_name='Fecha de Alta')),
                ('fecha_baja', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'clientes',
            },
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('apellido', models.CharField(max_length=100, verbose_name='Apellido')),
                ('tipo_dni', models.IntegerField(choices=[(1, 'DNI'), (2, 'CUIT'), (3, 'CUIL')], verbose_name='Tipo de documento')),
                ('dni', models.IntegerField(verbose_name='Documento')),
                ('email', models.EmailField(max_length=150)),
                ('baja', models.BooleanField(default=False)),
                ('legajo', models.IntegerField(verbose_name='Legajo')),
            ],
            options={
                'verbose_name_plural': 'empleados',
            },
        ),
        migrations.CreateModel(
            name='Servicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=50, verbose_name='Tipo de servicio')),
                ('downstream_mv', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(-5), django.core.validators.MaxValueValidator(10)])),
                ('downstream_snr', models.IntegerField(default=37, validators=[django.core.validators.MinValueValidator(33), django.core.validators.MaxValueValidator(40)])),
                ('upstream_mv', models.IntegerField(default=45, validators=[django.core.validators.MinValueValidator(40), django.core.validators.MaxValueValidator(50)])),
            ],
        ),
        migrations.CreateModel(
            name='Supervisor',
            fields=[
                ('empleado_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='integrador.empleado')),
            ],
            options={
                'abstract': False,
            },
            bases=('integrador.empleado',),
        ),
        migrations.CreateModel(
            name='Tecnico',
            fields=[
                ('empleado_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='integrador.empleado')),
                ('provincia', models.IntegerField(choices=[(1, 'Buenos Aires'), (2, 'Córdoba'), (3, 'Santa Fe'), (4, 'C.A.B.A.')])),
            ],
            options={
                'abstract': False,
            },
            bases=('integrador.empleado',),
        ),
        migrations.CreateModel(
            name='Vendedor',
            fields=[
                ('empleado_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='integrador.empleado')),
                ('comision', models.IntegerField(null=True, verbose_name='Comisión de Venta')),
            ],
            options={
                'verbose_name_plural': 'vendedores',
            },
            bases=('integrador.empleado',),
        ),
        migrations.CreateModel(
            name='Perfil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telefono', models.CharField(max_length=20, verbose_name='Teléfono')),
                ('domicilio', models.CharField(max_length=20, verbose_name='Domicilio')),
                ('foto', models.ImageField(null=True, upload_to='perfiles/', verbose_name='Foto Perfil')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Domicilio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direccion', models.CharField(max_length=100, verbose_name='Domicilio')),
                ('codigo_postal', models.CharField(max_length=20, verbose_name='Código Postal')),
                ('localidad', models.CharField(max_length=50, verbose_name='Localidad')),
                ('provincia', models.IntegerField(choices=[(1, 'Buenos Aires'), (2, 'Córdoba'), (3, 'Santa Fe'), (4, 'C.A.B.A.')])),
                ('latitud', models.FloatField(blank=True, max_length=20, null=True, verbose_name='Coordenada Latitud')),
                ('longitud', models.FloatField(blank=True, max_length=20, null=True, verbose_name='Coordenada Longitud')),
                ('cliente_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integrador.cliente', verbose_name='Cliente')),
                ('servicio', models.ManyToManyField(to='integrador.Servicio', verbose_name='Tipo de servicio')),
            ],
        ),
        migrations.CreateModel(
            name='OrdenTrabajo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_instalacion', models.DateField(verbose_name='Fecha de Instalación')),
                ('estado_ot', models.IntegerField(choices=[(1, 'Pendiente'), (2, 'Realizada'), (3, 'Cancelada')], verbose_name='Estado de la Orden de Trabajo')),
                ('domicilio_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integrador.domicilio', verbose_name='Domicilio de instalación')),
                ('tecnico_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integrador.tecnico', verbose_name='Técnico Asignado')),
            ],
            options={
                'verbose_name_plural': 'Ordenes de Trabajo',
            },
        ),
        migrations.AddField(
            model_name='cliente',
            name='vendedor_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integrador.vendedor', verbose_name='Vendedor asignado'),
        ),
    ]
